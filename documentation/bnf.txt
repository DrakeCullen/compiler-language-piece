https://inst.eecs.berkeley.edu/~cs164/sp18/python-grammar.html

T string ::= '<character>{<character>}' | "<character>{<character>}"
T comment ::= '''{<character>}'''
T comp_operator ::= "<" | ">" | "==" | ">=" | "<=" | "!="
T keyword ::= "and" | "or" | "not" |   # Get more as needed
T intpart ::= digit{<digit>}
T m_operator ::= "*" | "/" | "//" | "%" 
T a_operator ::= "+" | "-"
T hexinteger ::=  "0" ("x" | "X") hexdigit+
T hexdigit ::= digit | "a"..."f" | "A"..."F"
T E ::= "e" | "E"

P fraction ::= DOT intpart
P <variable> ::= <letter > {<letter or digit>}
P pointfloat ::= {intpart} fraction | {intpart} DOT
P exponent ::= E a_operator intpart
P exponentfloat ::= (intpart | pointfloat) exponent
P integer ::= floatnumber | hexinteger
P floatnumber ::= pointfloat | exponentfloat
P m_expr ::=  factor m_operator m_expr 

P a_expr ::= m_expr | a_expr "+" m_expr| a_expr "-" m_expr
P comparison ::= a_expr { comp_operator a_expr }
P or_test ::= and_test | or_test "or" and_test
P and_test ::= not_test | and_test "and" not_test
P not_test ::= comparison | "not" not_test

(Stiil needs expression and parans) factor ::= integer | floatnumber | string | variable | "(" expression ")"

expression ::=  conditional_expression
conditional_expression ::= or_test ["if" or_test "else" expression]
